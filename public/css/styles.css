@charset "UTF-8";
/*!
 * Structure based on ITCSS by Harry Roberts
 * http://csswizardry.net/talks/2014/11/itcss-dafed.pdf
 * Rationale for class name-spacing can be found at
 * http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/
 */
@font-face {
  font-family: "fontello";
  src: url("../fonts/fontello.eot?9913317");
  src: url("../fonts/fontello.eot?9913317#iefix") format("embedded-opentype"), url("../fonts/fontello.woff2?9913317") format("woff2"), url("../fonts/fontello.woff?9913317") format("woff"), url("../fonts/fontello.ttf?9913317") format("truetype"), url("../fonts/fontello.svg?9913317#fontello") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'fontello';
    src: url('../font/fontello.svg?9913317#fontello') format('svg');
  }
}
*/
[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ }

.icon-info:before {
  content: "\e800"; }

/* "" */
.icon-down-open-big:before {
  content: "\e801"; }

/* "" */
.icon-left-open-big:before {
  content: "\e802"; }

/* "" */
.icon-right-open-big:before {
  content: "\e803"; }

/* "" */
.icon-up-open-big:before {
  content: "\e804"; }

/* "" */
.icon-icon-email:before {
  content: "\e805"; }

/* "" */
.icon-icon-linkedin:before {
  content: "\e806"; }

/* "" */
.icon-icon-location:before {
  content: "\e807"; }

/* "" */
.icon-cancel:before {
  content: "\e808"; }

/* "" */
.container {
  padding-left: 15px;
  padding-right: 15px;
  margin: 0 auto; }
  @media all and (min-width: 62em) {
    .container {
      width: 768px; } }
  @media all and (min-width: 73.125em) {
    .container {
      width: 992px; } }
  @media all and (min-width: 90em) {
    .container {
      width: 1270px; } }

.row {
  margin-left: -15px;
  margin-right: -15px; }
  .row:before {
    content: "";
    display: table; }
  .row:after {
    content: "";
    display: table;
    clear: both; }

.col-md-6 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-6 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 49.45055%;
      float: left;
      margin-right: 1.0989%; } }
  @media all and (min-width: 48em) {
    .col-md-6:last-child {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 49.45055%;
      float: right;
      margin-right: 0; } }

.col-md-4 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-4 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 32.60073%;
      float: left;
      margin-right: 1.0989%; } }

.col-md-8 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-8 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 66.30037%;
      float: left;
      margin-right: 1.0989%; } }
  @media all and (min-width: 48em) {
    .col-md-8:last-child {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 66.30037%;
      float: right;
      margin-right: 0; } }

.col-md-3 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-3 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 24.17582%;
      float: left;
      margin-right: 1.0989%; } }
  @media all and (min-width: 48em) {
    .col-md-3:last-child {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 24.17582%;
      float: right;
      margin-right: 0; } }

.col-md-9 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-9 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 74.72527%;
      float: left;
      margin-right: 1.0989%; } }
  @media all and (min-width: 48em) {
    .col-md-9:last-child {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 74.72527%;
      float: right;
      margin-right: 0; } }

.col-md-2 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-2 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 15.75092%;
      float: left;
      margin-right: 1.0989%; } }

.col-md-10 {
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }
  @media all and (min-width: 48em) {
    .col-md-10 {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 83.15018%;
      float: left;
      margin-right: 1.0989%; } }
  @media all and (min-width: 48em) {
    .col-md-10:last-child {
      -webkit-box-sizing: content-box;
      box-sizing: content-box;
      width: 83.15018%;
      float: right;
      margin-right: 0; } }

.col-xs-12 {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  width: 100%;
  float: left;
  margin-left: 0;
  margin-right: 0; }

.img-responsive {
  display: inline-block;
  max-width: 100%;
  height: auto; }

.c-btn-default {
  color: white;
  display: inline-block;
  font-weight: normal;
  padding: 1rem 1.875rem;
  text-transform: uppercase;
  border: 1px solid #9e9e9e;
  text-decoration: none;
  -webkit-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease; }
  .c-btn-default:hover {
    background-color: white;
    color: #1a1a1a;
    text-decoration: none; }
  .c-btn-default.focus {
    background-color: white;
    color: #1a1a1a; }
  .c-btn-default:focus {
    background-color: white;
    color: #1a1a1a; }

.modal {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  outline: 0; }

.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5); }

.modal-dialog {
  position: relative; }
  @media all and (min-width: 48em) {
    .modal-dialog {
      width: 800px;
      margin: 30px auto; } }

.modal-content {
  padding-bottom: 3rem;
  position: relative;
  background-color: white;
  background-clip: padding-box;
  outline: 0; }

.c-modal--close {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  border: 0;
  font-size: 2.25rem;
  color: black;
  width: 44px;
  height: 44px;
  float: right;
  position: relative;
  line-height: 34px;
  background-color: transparent; }
  .c-modal--close:before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    width: 34px;
    height: 34px;
    -webkit-border-radius: 50%;
            border-radius: 50%; }
  .c-modal--close:after {
    content: "⨯";
    position: absolute;
    left: 0;
    right: 0;
    top: 5px;
    bottom: 0;
    margin: auto; }

.c-modal--header {
  height: 40px; }

.c-modal--content {
  color: #acacac;
  text-align: center;
  font-size: 1.25rem; }

.c-modal--title {
  color: black;
  text-transform: uppercase;
  text-align: center; }

.c-image--expander, .c-image--expander__mts, .c-image--expander__mtn {
  margin-top: 3rem;
  position: relative;
  cursor: pointer; }
  .c-image--expander:before, .c-image--expander__mts:before, .c-image--expander__mtn:before {
    content: "+";
    border: 1px solid white;
    font-size: 1.5rem;
    padding: 3px 10px;
    color: white;
    position: absolute;
    top: 1rem;
    right: 1rem; }

.c-image--expander__mts {
  margin-top: 10px; }

.c-image--expander__mtn {
  margin-top: 0; }

footer {
  text-align: center;
  color: rgba(255, 255, 255, 0.1);
  position: relative;
  margin: 2rem 0 1rem;
  padding-top: 1rem;
  text-transform: uppercase;
  font-size: 0.75rem; }
  @media all and (min-width: 48em) {
    footer {
      margin: 5rem 0 1rem; } }
  footer:before {
    content: "";
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    width: 10%;
    margin: auto; }

html {
  font-size: 16px; }

body {
  font-family: Arial, sans-serif;
  position: relative;
  padding-top: 2rem;
  background-color: #1a1a1a;
  color: white; }

main {
  position: relative;
  z-index: 1; }

h2 {
  font-size: 2rem; }

h3 {
  font-size: 1.5rem; }

p {
  margin-bottom: 1rem;
  margin-top: 0.5rem; }

a {
  text-decoration: none; }
  a:hover {
    color: #000;
    text-decoration: none; }

hr {
  border: 0;
  height: 1px;
  background: #9e9e9e;
  margin: 2.5rem 0; }
  @media all and (min-width: 48em) {
    hr {
      margin: 5rem 0; } }

textarea {
  resize: none; }

ul, ol {
  padding-left: 20px; }

.text-center {
  text-align: center; }

.clearfix:before {
  content: "";
  display: table; }

.clearfix:after {
  content: "";
  display: table;
  clear: both; }

.o-anchor {
  display: block;
  position: relative;
  /* top: -100px; */
  visibility: hidden; }

.o--btn__downwards {
  background-color: white;
  cursor: pointer;
  padding: 0.1875rem;
  font-size: 1.75rem;
  height: 3.125rem;
  width: 3.125rem;
  -webkit-border-radius: 50%;
          border-radius: 50%;
  border: 3px solid #acacac;
  margin: 2.1875rem auto; }
  .o--btn__downwards a:hover {
    text-decoration: none; }

.o-gutless-grid--span4 {
  position: relative; }
  @media all and (min-width: 62em) {
    .o-gutless-grid--span4 {
      width: 33.3334%;
      float: left; } }

.c-project-title {
  text-transform: uppercase;
  float: right;
  font-size: 1.25rem;
  font-weight: bold;
  line-height: 34px; }

.c-logo {
  color: #acacac;
  background-color: #2e2e2e;
  display: inline-block;
  padding: 0.625rem 1rem; }

.c-page--title {
  font-size: 3rem;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1.25rem; }
  @media all and (min-width: 48em) {
    .c-page--title {
      font-size: 4.5rem; } }

.c-slogan {
  color: #9e9e9e;
  text-transform: uppercase;
  font-size: 0.875rem;
  font-weight: bold; }

.c-page-summary {
  color: #9e9e9e;
  font-size: 1.25rem;
  line-height: 1.4;
  margin: 1rem auto 3rem; }
  @media all and (min-width: 48em) {
    .c-page-summary {
      width: 80%;
      font-size: 1.5rem; } }

.c-page-blurb {
  color: #9e9e9e;
  font-size: 0.75rem;
  line-height: 1.4;
  margin: 1rem auto 3rem; }
  @media all and (min-width: 48em) {
    .c-page-blurb {
      width: 50%;
      font-size: 1rem; } }

.c-breakout {
  background-color: white;
  color: #9e9e9e;
  margin-top: 4rem; }
  @media all and (min-width: 48em) {
    .c-breakout {
      margin-top: 2rem; } }

.c-breakout-title {
  color: black;
  text-transform: uppercase;
  padding-bottom: 0.5rem;
  margin-bottom: 1rem;
  position: relative; }
  .c-breakout-title:after {
    content: "";
    border-bottom: 1px solid rgba(0, 0, 0, 0.3);
    height: 1px;
    width: 8%;
    position: absolute;
    bottom: 0;
    left: 0; }

.c-caption {
  border-top: 1px solid white;
  color: #9e9e9e;
  line-height: 1.4; }
  @media all and (min-width: 48em) {
    .c-caption {
      text-align: right; } }

.c-caption--title {
  font-weight: bold;
  text-transform: uppercase;
  padding-top: 1rem;
  color: white; }

.c-footer--projects {
  text-align: center;
  color: #9e9e9e; }

.c-footer--projects__header {
  color: white;
  text-transform: uppercase;
  margin-bottom: 0; }

.c-footer--projects__list {
  margin-top: 2rem; }

.c-footer--projects__title {
  color: white;
  text-transform: uppercase;
  font-size: 0.875rem;
  font-weight: bold;
  letter-spacing: 0.25rem;
  margin-top: 1rem; }

.c-carousel {
  position: relative;
  -webkit-box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.64);
          box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.64);
  margin-top: 26px; }

.c-carousel--inner {
  position: relative;
  overflow: hidden;
  width: 100%; }

.c-carousel__open:checked + .c-carousel--item {
  position: static;
  opacity: 100; }

.c-carousel--item {
  position: absolute;
  opacity: 0;
  -webkit-transition: opacity 0.6s ease-out;
  transition: opacity 0.6s ease-out; }
  .c-carousel--item > figure {
    cursor: pointer;
    margin: 0; }
  .c-carousel--item img {
    display: block;
    height: auto;
    max-width: 100%; }

.c-carousel--control {
  -webkit-border-radius: 50%;
          border-radius: 50%;
  color: white;
  cursor: pointer;
  display: none;
  font-size: 40px;
  height: 40px;
  line-height: 35px;
  position: absolute;
  top: 50%;
  cursor: pointer;
  -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
          transform: translate(0, -50%);
  text-align: center;
  width: 40px;
  z-index: 10; }
  .c-carousel--control.prev {
    left: 2%; }
  .c-carousel--control.next {
    right: 2%; }
  .c-carousel--control:hover {
    background: rgba(0, 0, 0, 0.8);
    color: #aaaaaa; }

#carousel-1:checked ~ .control-1 {
  display: block; }

#carousel-2:checked ~ .control-2 {
  display: block; }

#carousel-3:checked ~ .control-3 {
  display: block; }

.c-carousel--indicators {
  list-style: none;
  margin: 0;
  padding: 0;
  position: absolute;
  bottom: 2%;
  left: 0;
  right: 0;
  text-align: center;
  z-index: 10; }
  .c-carousel--indicators li {
    display: inline-block;
    margin: 0 5px; }

.c-carousel--bullet {
  color: #434343;
  cursor: pointer;
  display: block;
  font-size: 35px; }
  .c-carousel--bullet:hover {
    color: #828282; }

#carousel-1:checked ~ .c-carousel--indicators li:nth-child(1) .c-carousel--bullet {
  color: #828282; }

#carousel-2:checked ~ .c-carousel--indicators li:nth-child(2) .c-carousel--bullet {
  color: #828282; }

#carousel-3:checked ~ .c-carousel--indicators li:nth-child(3) .c-carousel--bullet {
  color: #828282; }

.u-no-margin {
  margin: 0; }

.u-mts {
  margin: 1rem; }

.u-no-bullets {
  list-style: none; }

.u-normal-weight {
  font-weight: normal; }

.u-divider {
  border-top: 1px rgba(0, 0, 0, 0.3) solid;
  margin: 2.5rem 0; }

.u-underline {
  text-decoration: underline; }

.u-notes {
  font-size: 0.75rem; }

.u-lowercase {
  text-transform: lowercase; }

.u-uppercase {
  text-transform: uppercase; }

.u-san-serif {
  font-family: "Baskerville", serif; }

.u-flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
